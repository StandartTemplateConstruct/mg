/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_greenstone_mg_MGPassesWrapper */

#ifndef _Included_org_greenstone_mg_MGPassesWrapper
#define _Included_org_greenstone_mg_MGPassesWrapper
#ifdef __cplusplus
extern "C" {
#endif
#undef org_greenstone_mg_MGPassesWrapper_INVF_LEVEL_1
#define org_greenstone_mg_MGPassesWrapper_INVF_LEVEL_1 49L
#undef org_greenstone_mg_MGPassesWrapper_INVF_LEVEL_2
#define org_greenstone_mg_MGPassesWrapper_INVF_LEVEL_2 50L
#undef org_greenstone_mg_MGPassesWrapper_INVF_LEVEL_3
#define org_greenstone_mg_MGPassesWrapper_INVF_LEVEL_3 51L
#undef org_greenstone_mg_MGPassesWrapper_TEXT_PASS_1
#define org_greenstone_mg_MGPassesWrapper_TEXT_PASS_1 0L
#undef org_greenstone_mg_MGPassesWrapper_TEXT_PASS_2
#define org_greenstone_mg_MGPassesWrapper_TEXT_PASS_2 1L
#undef org_greenstone_mg_MGPassesWrapper_INDEX_PASS_1
#define org_greenstone_mg_MGPassesWrapper_INDEX_PASS_1 2L
#undef org_greenstone_mg_MGPassesWrapper_INDEX_PASS_2
#define org_greenstone_mg_MGPassesWrapper_INDEX_PASS_2 3L
#undef org_greenstone_mg_MGPassesWrapper_SPECIAL_PASS
#define org_greenstone_mg_MGPassesWrapper_SPECIAL_PASS 4L
#undef org_greenstone_mg_MGPassesWrapper_NO_STEM_OR_CASE
#define org_greenstone_mg_MGPassesWrapper_NO_STEM_OR_CASE 0L
#undef org_greenstone_mg_MGPassesWrapper_CASE_ONLY
#define org_greenstone_mg_MGPassesWrapper_CASE_ONLY 1L
#undef org_greenstone_mg_MGPassesWrapper_STEM_ONLY
#define org_greenstone_mg_MGPassesWrapper_STEM_ONLY 2L
#undef org_greenstone_mg_MGPassesWrapper_STEM_AND_CASE
#define org_greenstone_mg_MGPassesWrapper_STEM_AND_CASE 3L
#undef org_greenstone_mg_MGPassesWrapper_END_OF_DOCUMENT
#define org_greenstone_mg_MGPassesWrapper_END_OF_DOCUMENT 2L
/*
 * Class:     org_greenstone_mg_MGPassesWrapper
 * Method:    init
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_greenstone_mg_MGPassesWrapper_init
  (JNIEnv *, jobject);

/*
 * Class:     org_greenstone_mg_MGPassesWrapper
 * Method:    setBasePath
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_greenstone_mg_MGPassesWrapper_setBasePath
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_greenstone_mg_MGPassesWrapper
 * Method:    setFileName
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_greenstone_mg_MGPassesWrapper_setFileName
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_greenstone_mg_MGPassesWrapper
 * Method:    setStemOptions
 * Signature: (Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_org_greenstone_mg_MGPassesWrapper_setStemOptions
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     org_greenstone_mg_MGPassesWrapper
 * Method:    setInvfLevel
 * Signature: (C)V
 */
JNIEXPORT void JNICALL Java_org_greenstone_mg_MGPassesWrapper_setInvfLevel
  (JNIEnv *, jobject, jchar);

/*
 * Class:     org_greenstone_mg_MGPassesWrapper
 * Method:    setBufferSize
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_greenstone_mg_MGPassesWrapper_setBufferSize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_greenstone_mg_MGPassesWrapper
 * Method:    setInversionMemLimit
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_greenstone_mg_MGPassesWrapper_setInversionMemLimit
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_greenstone_mg_MGPassesWrapper
 * Method:    ignoreSGMLTags
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_org_greenstone_mg_MGPassesWrapper_ignoreSGMLTags
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     org_greenstone_mg_MGPassesWrapper
 * Method:    dumpFailedDocument
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_org_greenstone_mg_MGPassesWrapper_dumpFailedDocument
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     org_greenstone_mg_MGPassesWrapper
 * Method:    outputCompStats
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_greenstone_mg_MGPassesWrapper_outputCompStats
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_greenstone_mg_MGPassesWrapper
 * Method:    enableTracing
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_greenstone_mg_MGPassesWrapper_enableTracing
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_greenstone_mg_MGPassesWrapper
 * Method:    finish
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_greenstone_mg_MGPassesWrapper_finish
  (JNIEnv *, jobject);

/*
 * Class:     org_greenstone_mg_MGPassesWrapper
 * Method:    exitValue
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_greenstone_mg_MGPassesWrapper_exitValue
  (JNIEnv *, jobject);

/*
 * Class:     org_greenstone_mg_MGPassesWrapper
 * Method:    initIDs
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_greenstone_mg_MGPassesWrapper_initIDs
  (JNIEnv *, jclass);

/*
 * Class:     org_greenstone_mg_MGPassesWrapper
 * Method:    initCSide
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_greenstone_mg_MGPassesWrapper_initCSide
  (JNIEnv *, jobject);

/*
 * Class:     org_greenstone_mg_MGPassesWrapper
 * Method:    addPass
 * Signature: (CC)V
 */
JNIEXPORT void JNICALL Java_org_greenstone_mg_MGPassesWrapper_addPass
  (JNIEnv *, jobject, jchar, jchar);

/*
 * Class:     org_greenstone_mg_MGPassesWrapper
 * Method:    processMGDocument
 * Signature: ([B)Z
 */
JNIEXPORT jboolean JNICALL Java_org_greenstone_mg_MGPassesWrapper_processMGDocument
  (JNIEnv *, jobject, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
